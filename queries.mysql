--1. Query all columns for all American cities in the CITY table with populations larger than 100000. The CountryCode for America is USA.

-- The CITY table is described as follows:
-- select * from city where countrycode="USA" && population>100000


--2. Query the names of all the Japanese cities in the CITY table. The COUNTRYCODE for Japan is JPN.
-- select name from city where countrycode="JPN"

-- 3. Query a list of CITY names from STATION for cities that have an even ID number. Print the results in any order, but exclude duplicates 
-- from the answer.
-- select distinct city from station where  mod(id,2)=0


-- 4.Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths
--  (i.e.: number of characters in the name). If there is more than one smallest or largest city, choose the one that 
--  comes first when ordered alphabetically.
--  select city, length(city) from station order by length(city),city asc limit 1;
-- select city, length(city) from station order by length(city) desc limit 1;


--5. Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.

-- select distinct city from station where  lower(substr(city,1,1)) not in ('a','e','i','o','u');

-- select distinct city from station where not( city  like 'A%'or city  like 'E%' or city  like 'I%' or
--                                            city  like 'O%' or city  like 'U%');


-- 6. Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last 
-- characters. Your result cannot contain duplicates.

-- select distinct city from station where  lower(substr(city,1,1)) in ('a','e','i','o','u') and lower(substr(city,length(city),1))  in ('a','e','i','o','u') ;

-- 7. Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.
-- select distinct city from station where   lower(substr(city,length(city),1)) not in ('a','e','i','o','u');

-- 8.Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.
-- select distinct city from station where lower(substr(city,1,1)) not in ('a','e','i','o','u') or 
-- lower(substr(city,length(city),1)) not in('a','e','i','o','u');

-- 9.Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates
-- select distinct city from station where  lower(substr(city,1,1)) not in('a','e','i','o','u') and
-- lower(substr(city,length(city),1)) not in ('a','e','i','o','u');


-- 10.Query the Name of any student in STUDENTS who scored higher than 75  Marks. Order your output by the last three characters
--  of each name. If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.

-- select name from students where marks>75 order by right(name,3),id asc ;


-- 11.Write a query that prints a list of employee names (i.e.: the name attribute) for employees in Employee having a salary greater than 2000  per month who have been
--  employees for less than  months. Sort your result by ascending employee_id.

-- select name from employee where salary>2000 and months<10 order by  employee_id asc;


-- 12.Query a count of the number of cities in CITY having a Population larger  than 100000 .
-- select count(population) from city  where population>100000;

-- 13.Query the total population of all cities in CITY where District is California.
-- select sum(population) from city where district='California';

-- 14.Query the average population of all cities in CITY where District is California.
-- select avg(population)  from city where district='California';


-- 15.Query the average population for all cities in CITY, rounded down to the nearest integer.
-- select round(avg(population)) from city;

-- 16.Query the sum of the populations for all Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.
-- select sum(population)  from city where countrycode='JPN';

-- 17.Query the difference between the maximum and minimum populations in CITY.
-- select max(population)- min(population) from city ;



-- 18.  was tasked with calculating the average monthly salaries for all employees in the EMPLOYEES table, but did not
--  realize her keyboard 0 key was broken until after completing the calculation. She wants your help finding the 
--  difference between her miscalculation (using salaries with any zeros removed), and the actual average salary.

-- Write a query calculating the amount of error (i.e.:  average monthly salaries), and round it up to the next integer.
-- select  ceil(avg(salary)- avg(replace(salary,0,''))) from employees;

-- 19. We define an employees total earnings to be their monthly  worked, and the maximum total earnings  to be the maximum total earnings 
-- for any employee in the Employee table. Write a query to find the maximum total earnings for all employees as well as the total number
--  of employees who have maximum total earnings. Then print these values as  space-separated integers.
-- select  (months*salary) as earnings, count(months*salary) from employee group by earnings order by earnings desc limit 1;



-- 20.Query the following two values from the STATION table:
-- The sum of all values in LAT_N rounded to a scale of  decimal places.
-- The sum of all values in LONG_W rounded to a scale of  decimal places.
-- select round(sum(lat_n),2),round(sum(long_w),2) from station;
